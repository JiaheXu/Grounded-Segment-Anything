from robot_controller import FrankaOSCController
import time
import numpy as np


controller = FrankaOSCController(
        controller_type="OSC_POSE",
        visualizer=False)

vtamp_reset = [-1.46929639,  0.19567124,  0.8190383,  -1.63386635, -0.07106318,  1.70830441,  0.28554653]

def move_mug(pos1, pos2):
    # pos1, pos2: start: [x1, y1, z1], target: [x2, y2, z2]
    controller.move_to(np.array(pos1), use_rot = True, target_rot = np.array([[1, 0, 0],
    [0, -1, 0],
    [0, 0, -1]]))
    controller.gripper_move_to(0.01)
    time.sleep(2)

    controller.move_to(np.array(pos2), use_rot = True, target_rot = np.array([[1, 0, 0],
    [0, -1, 0],
    [0, 0, -1]]))
    controller.gripper_move_to(0.08)
    controller.reset(joint_positions = [-1.46929639,  0.19567124,  0.8190383,  -1.63386635, -0.07106318,  1.70830441,  0.28554653])

############################################################################################

controller.gripper_move_to(0.08)

controller.reset(joint_positions = vtamp_reset)

#################### make changes here #####################################################
# move mugs aside, depending on the number of mugs, use move_mug() function as many times
# examples:
# move_mug([ 0.48893882, -0.29074673,  0.0765812 ], [ 0.7031476 , -0.3215066 ,  0.07279346])
move_mug([ 0.5474474 , -0.2850109, 0.08514559], [0.45348811, -0.5230440, 0.08514559])

# the mug to put into microwave
target_mug_joints = [-1.77983428,  1.45387547,  0.90652298, -1.41284288,  0.51738419,  1.97184332,  1.69509726]

################################################################################################


task3 = {
# open door
"obs1_3": [
    [-1.22600608,  1.2587661,   0.99964127, -1.47919329,  0.44137106,  1.58811605,  1.8456653 ],
    [-1.63093308,  1.24520616,  1.12338444, -1.81654664,  0.47459487,  2.07102645,  1.78669782],
    [-1.81622717,  0.86495759,  0.85508283, -2.01011695,  0.96479273,  1.99264066,  1.47079617],
    [-1.91707517,  0.61092712,  0.68459515, -2.26984795,  1.41356652,  1.97519737,  1.162196  ],
    [-2.29953026,  0.29414794,  0.70831955, -2.58972329,  1.5485248,   1.94432376,  1.10958152]
],



# "safe1_11": [[-1.77360516,  1.19879813,  0.67563912, -1.538672,    0.9787703,  2.0041984,  1.45241623],], # move to a low enough position near the mug

# put cup in
"obs1_4":[
    # [-1.27554895,  1.07816133,  0.23853773, -1.42370016,  1.12189784,  1.75409628,  1.39045532],
    # [-1.68397062,  1.09706988,  0.66643542, -1.69530384,  1.24054025,  2.23729691,  1.25090656],
    target_mug_joints,
    [-1.17838006,  0.91299083,  0.40012249, -1.59721242,  0.67870246,  1.313955,  1.38877967],
    [-1.0919486,   0.80454813,  0.69470468, -2.18191279,  0.84807599,  1.79073728,  1.25595399]
],

"safe_final":[
    [-1.17838006,  0.91299083,  0.40012249, -1.59721242,  0.67870246,  1.313955,  1.38877967],
     [-1.2639115,   0.40237966,  0.64330146, -1.85705271,  0.52215009,  1.75011191,  0.67362122],
     [-1.8782282,  -0.06958966,  0.7723828,  -1.8773017,   0.04423827,  1.82666997, -0.35935782] # new reset
],

"safe1_2" : [
# move to safety
  # [-1.23192304,  0.59689483,  0.21260762, -1.59281459,  0.58118511,  2.17906235,  1.24677829],
  # [-2.17467441,  0.06225786,  1.23496896, -2.01507981,  0.7058641,   2.69361803,  0.45678661],
  [-2.04549875,  0.13110096,  0.8547124,  -2.27653889,  0.73427079,  2.96539279,  1.13378737],
  [-2.29953026,  0.29414794,  0.70831955, -2.58972329,  1.5485248,   1.94432376,  1.10958152],
],

# close door
"obs1_5": [
  [-2.29953026,  0.29414794,  0.70831955, -2.58972329,  1.5485248,   1.94432376,  1.10958152],
  [-1.91707517,  0.61092712,  0.68459515, -2.26984795,  1.41356652,  1.97519737,  1.162196  ],
  [-1.81622717,  0.86495759,  0.85508283, -2.01011695,  0.96479273,  1.99264066,  1.47079617],
  [-1.63093308,  1.24520616,  1.12338444, -1.81654664,  0.47459487,  2.07102645,  1.78669782],
  # [-1.22600608,  1.2587661,   0.99964127, -1.47919329,  0.44137106,  1.58811605,  1.8456653 ],
  [-1.36158141,  1.25655846,  1.057936,   -1.60698328,  0.45593926,  1.79278133,  1.806601  ]
],

"safe_final2":[
    # [-1.17838006,  0.91299083,  0.40012249, -1.59721242,  0.67870246,  1.313955,  1.38877967],
     [-1.2639115,   0.40237966,  0.64330146, -1.85705271,  0.52215009,  1.75011191,  0.67362122]
],
}

for k, joints in task3.items():
    if "safe" not in k:
        controller.reset(joint_positions = joints[0])
        controller.gripper_move_to(0.01)
        time.sleep(2)
        if len(joints) > 1:
            for j in joints[1: ]:
                controller.reset(joint_positions = j, duration = 12)
        controller.gripper_move_to(0.08)

        if k == "obs1_1" or k == "obs1_2":
            controller.reset(joint_positions = 
                            [-1.8782282,  -0.06958966,  0.7723828,  -1.8773017,   0.04423827,  1.82666997, -0.35935782]
                            #  [-1.46929639,  0.19567124,  0.8190383,  -1.63386635, -0.07106318,  1.70830441,  0.28554653]
                             )
        
        if k == "obs1_4":
            controller.gripper_move_to(0.08)
            time.sleep(5)
            controller.gripper_move_to(0.08)
            time.sleep(25)
            # controller.move_by(np.array([0.0, 0.0, 0.002]), duration = 1)
            time.sleep(25)
            controller.gripper_move_to(0.08)
            # controller.move_by(np.array([0.0, 0.0, 0.002]), duration = 1)
            time.sleep(25)
            controller.gripper_move_to(0.08)
            # controller.move_by(np.array([0.0, 0.0, 0.002]), duration = 1)
            time.sleep(25)
            # controller.move_by(np.array([0.0, 0.0, 0.02]), duration=1)
            time.sleep(10)
    else:
        for j in joints:
            controller.reset(joint_positions = j, duration = 12)


controller.reset(joint_positions = [-1.46929639,  0.19567124,  0.8190383,  -1.63386635, -0.07106318,  1.70830441,  0.28554653])


